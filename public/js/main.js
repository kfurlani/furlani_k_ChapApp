// imports go at the top
import ChatMsg from './components/ChatMessage.js';
import userTypingMsg from './components/userTypingMsg.js';

const socket = io();

//utility function for socket
function setUserID({ sID }){
    //debugger;
    //save our unique ID generated by socket on the erver side - this is how we track individual connections to the chat service. 
    vm.socketID = sID;
}

function showNewMessage({ message }){
    //debugger;
    vm.messages.push(message);
}

function handleUserTyping({user}){
  console.log('somebody is typing');
  vm.typing = user;

  if (user.id = vm.socketID) {
    vm.userTyping = user + ' is writing you a message';
  }
  else {
    vm.userTyping = ' ';
  }
}

  const { createApp } = Vue

  const vm = createApp({
    data() {
      return {
        socketID: '',
        message: '',
        messages: [],
        nickname: '',
        userTyping: '',
        user: []
      }
    }, 

    methods: {
        dispatchMessage(){
            socket.emit('chat_message', {
                content: this.message,
                name: this.nickname || 'anonymous',
                id: this.socketID
            })

            this.message = "";
        },
        
        catchTextFocus(){
          //emit a typing event and broadcast it to the server
          socket.emit('user_typing', {
            name: this.nickname || 'none of your business'
          })
        }
    },

    components: {
        newmsg: ChatMsg,
        userTypingMsg: userTypingMsg

    }

  }).mount('#app')

  socket.addEventListener('connected', setUserID);
  socket.addEventListener('new_message', showNewMessage);
  socket.addEventListener('typing', handleUserTyping );
